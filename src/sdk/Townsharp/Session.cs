using MediatR;

using Microsoft.Extensions.Logging;

using Townsharp.Configuration;
using Townsharp.Consoles;
using Townsharp.Infrastructure.GameConsole;
using Townsharp.Internals;

namespace Townsharp;

public class Session
{
    private readonly IMediator sessionMediator;
    private readonly SessionConfiguration sessionConfiguration;
    private readonly GameServerManager gameServerManager;
    private readonly ServerGroupManager serverGroupManager;
    private readonly GameServerConsoleManager gameServerConsoleManager;
    private readonly ConsoleClientFactory consoleClientFactory;
    private readonly ConsoleAccessProvider consoleAccessProvider;
    private readonly ILoggerFactory loggerFactory;

    internal Session(
        IMediator sessionMediator,
        SessionConfiguration sessionConfiguration,
        GameServerManager gameServerManager,
        ServerGroupManager serverGroupManager,
        GameServerConsoleManager gameServerConsoleManager,
        // these need to be generated by some other means
        ConsoleClientFactory consoleClientFactory,
        ConsoleAccessProvider consoleAccessProvider,
        ILoggerFactory loggerFactory)
    {
        this.sessionMediator = sessionMediator;
        this.sessionConfiguration = sessionConfiguration;
        this.gameServerManager = gameServerManager;
        this.serverGroupManager = serverGroupManager;
        this.gameServerConsoleManager = gameServerConsoleManager;
        this.consoleClientFactory = consoleClientFactory;
        this.consoleAccessProvider = consoleAccessProvider;
        this.loggerFactory = loggerFactory;
    }

    // these need to be generated by some other means
    public void TEST_AddGameServerConsole(GameServerId id)
    {
        this.gameServerConsoleManager.gameServerConsoles.Add(
            id,
            new GameServerConsole(
                id,
                this.consoleClientFactory,
                this.consoleAccessProvider,
                this.loggerFactory.CreateLogger<GameServerConsole>()));
    }

    public IReadOnlyDictionary<GameServerId, GameServer> Servers => this.gameServerManager;

    public IReadOnlyDictionary<ServerGroupId, ServerGroup> Groups => this.serverGroupManager;

    public IReadOnlyDictionary<GameServerId, GameServerConsole> Consoles => this.gameServerConsoleManager;
}
